{"version":3,"sources":["logo.svg","components/common/Select.js","components/common/VersionSelector.js","utils.js","components/common/Diff/DiffHeader.js","components/common/Diff/Diff.js","components/common/Loading.js","components/common/DiffViewer.js","components/pages/Home.js","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","__webpack_require__","p","Option","AntdSelect","SelectBoxContainer","styled","div","_templateObject","SelectBox","_templateObject2","Select","_ref","title","options","props","Object","objectWithoutProperties","react_default","a","createElement","assign","size","map","option","key","value","Selectors","VersionSelector_templateObject","FromVersionSelector","VersionSelector_templateObject2","ToVersionSelector","_templateObject3","ButtonContainer","_templateObject4","getReleasedVersionsWithoutCandidates","releasedVersions","toVersion","isLatestAReleaseCandidate","semver","prerelease","cleanedToVersion","valid","coerce","filter","releasedVersion","compare","getReleasedVersions","_ref2","minVersion","maxVersion","length","lt","gt","getFirstMajorRelease","_ref3","versionToCompare","find","diff","VersionSelector","_ref4","showDiff","_useState","useState","_useState2","slicedToArray","isLoading","setLoading","_useState3","_useState4","allVersions","setAllVersions","_useState5","_useState6","fromVersionList","setFromVersionList","_useState7","_useState8","toVersionList","setToVersionList","_useState9","_useState10","localFromVersion","setLocalFromVersion","_useState11","_useState12","localToVersion","setLocalToVersion","useEffect","_ref5","asyncToGenerator","regenerator_default","mark","_callee","response","allVersionsFromResponse","toVersionToBeSet","sanitizedVersions","fromVersionToBeSet","wrap","_context","prev","next","fetch","sent","text","split","stop","apply","this","arguments","fetchVersions","react","loading","onChange","chosenVersion","es_button","type","onClick","fromVersion","removeAppPathPrefix","path","replace","FileRenameArrow","icon","DiffHeader_templateObject","FileName","oldPath","newPath","oldPathSanitized","newPathSanitized","FileStatus","tag","color","add","modify","delete","rename","BinaryBadge","visible","HeaderButtonsContainer","hasDiff","DiffHeader_templateObject2","CompleteDiffButton","diffKey","onCompleteDiff","isDiffCompleted","shape","DiffHeader_templateObject3","_ref6","CollapseDiffButton","_ref7","isDiffCollapsed","DiffHeader_templateObject4","_ref8","DiffHeader","_ref9","setIsDiffCollapsed","DiffHeader_FileName","DiffHeader_FileStatus","DiffHeader_BinaryBadge","_templateObject5","Container","Diff_templateObject","DiffView","RDiff","Diff_templateObject2","React","memo","hunks","selectedChanges","onToggleChangeSelection","undefined","isDiffCollapsedByDefault","Diff_DiffHeader","viewType","diffType","enhancers","markEdits","tokens","tokenize","hunk","es","content","gutterEvents","prevProps","nextProps","rotate","keyframes","Loading_templateObject","Loading","alt","src","logo","Loading_templateObject2","DiffViewer_templateObject","getPatchURL","concat","withChangeSelect","multiple","setDiff","completedDiffs","setCompletedDiffs","handleCompleteDiff","includes","prevCompletedDiffs","completedDiff","toConsumableArray","parseDiff","sort","fetchDiff","common_Loading","DiffViewer_Container","oldRevision","newRevision","getDiffKey","common_Diff_Diff","Page","Home_templateObject","Card","Home_templateObject2","Home","setFromVersion","setToVersion","setShowDiff","Home_Container","common_VersionSelector","common_DiffViewer","App","pages_Home","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7b33fe5b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\nimport styled from 'styled-components'\nimport { Select as AntdSelect } from 'antd'\n\nconst { Option } = AntdSelect\n\nconst SelectBoxContainer = styled.div`\n  width: 100%;\n`\nconst SelectBox = styled(AntdSelect)`\n  width: 100%;\n`\n\nconst Select = ({ title, options, ...props }) => (\n  <SelectBoxContainer>\n    <h4>{title}</h4>\n\n    <SelectBox size=\"large\" {...props}>\n      {options.map(option => (\n        <Option key={option} value={option}>\n          {option}\n        </Option>\n      ))}\n    </SelectBox>\n  </SelectBoxContainer>\n)\n\nexport default Select\n","import React, { Fragment, useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Button } from 'antd'\nimport semver from 'semver'\nimport { RELEASES_URL } from '../../utils'\nimport { Select } from './'\n\nconst Selectors = styled.div`\n  display: flex;\n  justify-content: space-between;\n`\n\nconst FromVersionSelector = styled(Select)`\n  padding-right: 5px;\n`\n\nconst ToVersionSelector = styled(Select)`\n  padding-left: 5px;\n`\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  height: auto;\n  overflow: hidden;\n  margin-top: 25px;\n`\n\n// Filters out release candidates from `releasedVersion` with the exception of\n// the release candidates from the latest version only if the latest is a release candidate itself\nconst getReleasedVersionsWithoutCandidates = ({\n  releasedVersions,\n  toVersion\n}) => {\n  const isLatestAReleaseCandidate = semver.prerelease(toVersion) !== null\n  const cleanedToVersion = semver.valid(semver.coerce(toVersion))\n\n  return releasedVersions.filter(\n    releasedVersion =>\n      semver.prerelease(releasedVersion) === null ||\n      (isLatestAReleaseCandidate &&\n        semver.compare(\n          cleanedToVersion,\n          semver.valid(semver.coerce(releasedVersion))\n        ) === 0)\n  )\n}\n\nconst getReleasedVersions = ({ releasedVersions, minVersion, maxVersion }) =>\n  releasedVersions.filter(\n    releasedVersion =>\n      releasedVersion.length > 0 &&\n      ((maxVersion && semver.lt(releasedVersion, maxVersion)) ||\n        (minVersion && semver.gt(releasedVersion, minVersion)))\n  )\n\n// Finds the first minor release (which in react-native is the major) when compared to another version\nconst getFirstMajorRelease = ({ releasedVersions, versionToCompare }) =>\n  releasedVersions.find(\n    releasedVersion =>\n      semver.diff(\n        semver.valid(semver.coerce(releasedVersion)),\n        semver.valid(semver.coerce(versionToCompare))\n      ) === 'minor'\n  )\n\nconst VersionSelector = ({ showDiff }) => {\n  const [isLoading, setLoading] = useState(true)\n  const [allVersions, setAllVersions] = useState([])\n  const [fromVersionList, setFromVersionList] = useState([])\n  const [toVersionList, setToVersionList] = useState([])\n\n  const [localFromVersion, setLocalFromVersion] = useState('')\n  const [localToVersion, setLocalToVersion] = useState('')\n\n  useEffect(() => {\n    const fetchVersions = async () => {\n      const response = await fetch(RELEASES_URL)\n\n      const allVersionsFromResponse = (await response.text()).split('\\n')\n\n      const toVersionToBeSet = allVersionsFromResponse[0]\n\n      // Remove `rc` versions from array\n      const sanitizedVersions = getReleasedVersionsWithoutCandidates({\n        releasedVersions: allVersionsFromResponse,\n        toVersion: toVersionToBeSet\n      })\n\n      setAllVersions(sanitizedVersions)\n\n      // Get first major release before latest\n      const fromVersionToBeSet = getFirstMajorRelease({\n        releasedVersions: sanitizedVersions,\n        versionToCompare: toVersionToBeSet\n      })\n\n      setFromVersionList(\n        getReleasedVersions({\n          releasedVersions: sanitizedVersions,\n          maxVersion: sanitizedVersions[0]\n        })\n      )\n      setToVersionList(\n        getReleasedVersions({\n          releasedVersions: sanitizedVersions,\n          minVersion: fromVersionToBeSet\n        })\n      )\n      setLocalFromVersion(fromVersionToBeSet)\n      setLocalToVersion(toVersionToBeSet)\n\n      setLoading(false)\n    }\n\n    fetchVersions()\n  }, [setLocalFromVersion, setLocalToVersion])\n\n  useEffect(() => {\n    if (isLoading) {\n      return\n    }\n\n    setFromVersionList(\n      getReleasedVersions({\n        releasedVersions: allVersions,\n        maxVersion: allVersions[0]\n      })\n    )\n    setToVersionList(\n      getReleasedVersions({\n        releasedVersions: allVersions,\n        minVersion: localFromVersion\n      })\n    )\n  }, [isLoading, allVersions, localFromVersion])\n\n  return (\n    <Fragment>\n      <h1>React Native update guide</h1>\n\n      <Selectors>\n        <FromVersionSelector\n          title=\"What's your current React Native version?\"\n          loading={isLoading}\n          value={localFromVersion}\n          options={fromVersionList}\n          onChange={chosenVersion => setLocalFromVersion(chosenVersion)}\n        />\n\n        <ToVersionSelector\n          title=\"To which version would you like to update?\"\n          loading={isLoading}\n          value={localToVersion}\n          options={toVersionList}\n          onChange={chosenVersion => setLocalToVersion(chosenVersion)}\n        />\n      </Selectors>\n\n      <ButtonContainer>\n        <Button\n          type=\"primary\"\n          size=\"large\"\n          onClick={() =>\n            showDiff({\n              fromVersion: localFromVersion,\n              toVersion: localToVersion\n            })\n          }\n        >\n          Show me how to upgrade!\n        </Button>\n      </ButtonContainer>\n    </Fragment>\n  )\n}\n\nexport default VersionSelector\n","export const INSTRUCTION_PLATFORMS = {\n  IOS: 'iOS',\n  ANDROID: 'Android'\n}\n\nexport const INSTRUCTION_CATEGORIES = {\n  ADDED: 'Added',\n  WARNINGS: 'Warnings',\n  CHANGES: 'Changes',\n  BREAKING_CHANGES: 'Breaking Changes',\n  TROUBLESHOOTING: 'Troubleshooting'\n}\n\nexport const RELEASED_VERSIONS = ['0.59.0']\n\nexport const RELEASES_URL =\n  'https://raw.githubusercontent.com/react-native-community/rn-diff-purge/master/RELEASES'\n\nexport const PACKAGE_MANAGERS = {\n  yarn: {\n    command: pkg => `yarn add ${pkg}`\n  },\n  npm: {\n    command: pkg => `npm install ${pkg} --save`\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Tag, Icon, Button } from 'antd'\n\nconst removeAppPathPrefix = path => path.replace(/RnDiffApp\\//, '')\n\nconst FileRenameArrow = styled(props => <Icon {...props} type=\"right\" />)`\n  font-size: 10px;\n  margin: 0 5px;\n  color: #f78206;\n`\n\nconst FileName = ({ oldPath, newPath, type }) => {\n  const oldPathSanitized = removeAppPathPrefix(oldPath)\n  const newPathSanitized = removeAppPathPrefix(newPath)\n\n  if (type === 'delete') {\n    return <span>{oldPathSanitized}</span>\n  }\n\n  if (oldPathSanitized !== newPathSanitized && type !== 'add') {\n    return (\n      <span>\n        {oldPathSanitized} <FileRenameArrow /> {newPathSanitized}\n      </span>\n    )\n  }\n\n  return <span>{newPathSanitized}</span>\n}\n\nconst FileStatus = ({ type, ...props }) => {\n  const colors = {\n    add: 'blue',\n    modify: 'green',\n    delete: 'red',\n    rename: 'orange'\n  }\n\n  const labels = {\n    add: 'ADDED',\n    modify: 'MODIFIED',\n    delete: 'DELETED',\n    rename: 'RENAMED'\n  }\n\n  return (\n    <Tag {...props} color={colors[type]}>\n      {labels[type]}\n    </Tag>\n  )\n}\n\nconst BinaryBadge = ({ visible, ...props }) =>\n  visible && (\n    <Tag {...props} color=\"cyan\">\n      BINARY\n    </Tag>\n  )\n\nconst HeaderButtonsContainer = styled(\n  ({ hasDiff, ...props }) => hasDiff && <div {...props} />\n)`\n  float: right;\n`\n\nconst CompleteDiffButton = styled(\n  ({ diffKey, isDiffCompleted, onCompleteDiff, ...props }) => (\n    <Button\n      {...props}\n      type=\"ghost\"\n      shape=\"circle\"\n      icon=\"check\"\n      onClick={() => onCompleteDiff(diffKey)}\n    />\n  )\n)`\n  font-size: 12px;\n  line-height: 0;\n  border-width: 0px;\n  width: 20px;\n  height: 20px;\n  margin: 5px 8px 0;\n  &,\n  &:hover,\n  &:focus {\n    color: ${({ isDiffCompleted }) =>\n      isDiffCompleted ? '#52c41a' : '#24292e'};\n  }\n`\n\nconst CollapseDiffButton = styled(\n  ({ isDiffCollapsed, isDiffCompleted, ...props }) => (\n    <Button {...props} type=\"link\" icon=\"down\" />\n  )\n)`\n  color: #24292e;\n  font-size: 10px;\n  transform: ${({ isDiffCollapsed }) =>\n    isDiffCollapsed ? 'rotate(-90deg)' : 'initial'};\n  transition: transform 0.2s ease-in-out;\n  transform-origin: center;\n  line-height: 0;\n  height: auto;\n  &:hover,\n  &:focus {\n    color: #24292e;\n  }\n`\n\nconst DiffHeader = styled(\n  ({\n    oldPath,\n    newPath,\n    type,\n    diffKey,\n    hasDiff,\n    isDiffCollapsed,\n    setIsDiffCollapsed,\n    isDiffCompleted,\n    onCompleteDiff,\n    ...props\n  }) => (\n    <div {...props}>\n      <CollapseDiffButton\n        isDiffCompleted={isDiffCompleted}\n        isDiffCollapsed={isDiffCollapsed}\n        onClick={() => setIsDiffCollapsed(!isDiffCollapsed)}\n      />\n      <FileName oldPath={oldPath} newPath={newPath} type={type} />{' '}\n      <FileStatus type={type} />\n      <BinaryBadge visible={!hasDiff} />\n      <HeaderButtonsContainer hasDiff={hasDiff}>\n        <CompleteDiffButton\n          diffKey={diffKey}\n          isDiffCompleted={isDiffCompleted}\n          onCompleteDiff={onCompleteDiff}\n        />\n      </HeaderButtonsContainer>\n    </div>\n  )\n)`\n  font-family: SFMono-Regular, Consolas, Liberation Mono, Menlo, Courier,\n    monospace;\n  font-size: 12px;\n  color: #24292e;\n  line-height: 32px;\n  background-color: #fafbfc;\n  border-bottom: 1px solid #e1e4e8;\n  border-top-left-radius: 2px;\n  border-top-right-radius: 2px;\n  padding: 5px 10px;\n`\n\nexport default DiffHeader\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Diff as RDiff, Hunk, markEdits, tokenize } from 'react-diff-view'\nimport DiffHeader from './DiffHeader'\n\nconst Container = styled.div`\n  border: 1px solid #ddd;\n  border-radius: 3px;\n  margin-bottom: 16px;\n  margin-top: 16px;\n`\n\nconst DiffView = styled(RDiff)`\n  .diff-gutter-col {\n    width: 30px;\n  }\n\n  tr.diff-line {\n    font-family: SFMono-Regular, Consolas, Liberation Mono, Menlo, Courier,\n      monospace;\n  }\n\n  td.diff-gutter {\n    color: rgba(27, 31, 35, 0.3);\n    padding: 0;\n    text-align: center;\n    font-size: 12px;\n  }\n\n  td.diff-gutter .diff-line-normal {\n    background-color: #cdffd8;\n    border-color: #bef5cb;\n  }\n\n  td.diff-gutter:hover {\n    cursor: pointer;\n    color: rgba(27, 31, 35, 0.6);\n  }\n\n  td.diff-code {\n    font-size: 12px;\n    color: #24292e;\n  }\n\n  td.diff-code-insert .diff-code-edit {\n    background-color: #acf2bd;\n  }\n\n  td.diff-gutter-omit:before {\n    width: 0;\n    background-color: transparent;\n  }\n`\n\n// Diff will be collapsed by default if the file has been deleted or has more than 5 hunks\nconst isDiffCollapsedByDefault = ({ type, hunks }) =>\n  type === 'delete' || hunks.length > 5 ? true : undefined\n\nconst Diff = ({\n  oldPath,\n  newPath,\n  type,\n  hunks,\n  diffKey,\n  isDiffCompleted,\n  onCompleteDiff,\n  selectedChanges,\n  onToggleChangeSelection\n}) => {\n  const [isDiffCollapsed, setIsDiffCollapsed] = useState(\n    isDiffCollapsedByDefault({ type, hunks })\n  )\n\n  if (isDiffCompleted && isDiffCollapsed === undefined) {\n    setIsDiffCollapsed(true)\n  }\n\n  return (\n    <Container>\n      <DiffHeader\n        oldPath={oldPath}\n        newPath={newPath}\n        type={type}\n        diffKey={diffKey}\n        hasDiff={hunks.length > 0}\n        isDiffCollapsed={isDiffCollapsed}\n        setIsDiffCollapsed={setIsDiffCollapsed}\n        isDiffCompleted={isDiffCompleted}\n        onCompleteDiff={onCompleteDiff}\n      />\n\n      {!isDiffCollapsed && (\n        <DiffView\n          viewType=\"split\"\n          diffType={type}\n          hunks={hunks}\n          selectedChanges={selectedChanges}\n        >\n          {hunks => {\n            const options = {\n              enhancers: [markEdits(hunks)]\n            }\n\n            const tokens = tokenize(hunks, options)\n\n            return hunks.map(hunk => (\n              <Hunk\n                key={hunk.content}\n                hunk={hunk}\n                tokens={tokens}\n                gutterEvents={{ onClick: onToggleChangeSelection }}\n              />\n            ))\n          }}\n        </DiffView>\n      )}\n    </Container>\n  )\n}\n\n/*\n  Return true if passing `nextProps` to render would return\n  the same result as passing prevProps to render, otherwise return false\n*/\nconst arePropsEqual = (prevProps, nextProps) =>\n  prevProps.isDiffCompleted === nextProps.isDiffCompleted\n\nexport default React.memo(Diff, arePropsEqual)\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport logo from '../../logo.svg'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst Loading = styled(props => (\n  <img alt=\"Loading\" title=\"Loading\" {...props} src={logo} />\n))`\n  width: 60px;\n  margin: 15px 0;\n  animation: ${rotate} 3s linear infinite;\n`\n\nexport default Loading\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { parseDiff, withChangeSelect } from 'react-diff-view'\nimport 'react-diff-view/style/index.css'\nimport Diff from './Diff/Diff'\nimport Loading from './Loading'\n\nconst Container = styled.div`\n  width: 90%;\n`\n\nconst getPatchURL = ({ fromVersion, toVersion }) =>\n  `https://raw.githubusercontent.com/react-native-community/rn-diff-purge/diffs/diffs/${fromVersion}..${toVersion}.diff`\n\nconst getDiffKey = ({ oldRevision, newRevision }) =>\n  `${oldRevision}${newRevision}`\n\nconst DiffViewer = ({\n  showDiff,\n  fromVersion,\n  toVersion,\n  selectedChanges,\n  onToggleChangeSelection\n}) => {\n  const [isLoading, setLoading] = useState(true)\n  const [diff, setDiff] = useState(null)\n  const [completedDiffs, setCompletedDiffs] = useState([])\n\n  const handleCompleteDiff = diffKey => {\n    if (completedDiffs.includes(diffKey)) {\n      return setCompletedDiffs(prevCompletedDiffs =>\n        prevCompletedDiffs.filter(completedDiff => completedDiff !== diffKey)\n      )\n    }\n\n    setCompletedDiffs(prevCompletedDiffs => [...prevCompletedDiffs, diffKey])\n  }\n\n  useEffect(() => {\n    if (!showDiff) {\n      return\n    }\n\n    const fetchDiff = async () => {\n      setLoading(true)\n\n      const response = await (await fetch(\n        getPatchURL({ fromVersion, toVersion })\n      )).text()\n\n      setDiff(\n        parseDiff(response).sort(({ newPath }) =>\n          newPath.includes('package.json') ? -1 : 1\n        )\n      )\n\n      setLoading(false)\n    }\n\n    fetchDiff()\n  }, [fromVersion, showDiff, toVersion])\n\n  if (!showDiff) {\n    return null\n  }\n\n  if (isLoading) {\n    return <Loading />\n  }\n\n  return (\n    <Container>\n      {diff.map(diff => {\n        const diffKey = getDiffKey(diff)\n\n        return (\n          <Diff\n            key={`${diff.oldRevision}${diff.newRevision}`}\n            {...diff}\n            diffKey={diffKey}\n            isDiffCompleted={completedDiffs.includes(diffKey)}\n            onCompleteDiff={handleCompleteDiff}\n            selectedChanges={selectedChanges}\n            onToggleChangeSelection={onToggleChangeSelection}\n          />\n        )\n      })}\n    </Container>\n  )\n}\n\nexport default withChangeSelect({ multiple: true })(DiffViewer)\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Card } from 'antd'\nimport VersionSelector from '../common/VersionSelector'\nimport DiffViewer from '../common/DiffViewer'\n\nconst Page = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  padding-top: 30px;\n`\n\nconst Container = styled(Card)`\n  width: 90%;\n  border-radius: 3px;\n`\n\nconst Home = () => {\n  const [fromVersion, setFromVersion] = useState('')\n  const [toVersion, setToVersion] = useState('')\n  const [showDiff, setShowDiff] = useState(false)\n\n  const handleShowDiff = ({ fromVersion, toVersion }) => {\n    setFromVersion(fromVersion)\n    setToVersion(toVersion)\n    setShowDiff(true)\n  }\n\n  return (\n    <Page>\n      <Container>\n        <VersionSelector showDiff={handleShowDiff} />\n      </Container>\n\n      <DiffViewer\n        showDiff={showDiff}\n        fromVersion={fromVersion}\n        toVersion={toVersion}\n      />\n    </Page>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport Home from './components/pages/Home'\n\nconst App = props => <Home />\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css';\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}