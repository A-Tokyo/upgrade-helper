{"version":3,"sources":["logo.svg","components/text.js","components/link.js","components/dropdown.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Text","props","h1","h2","bold","link","style","rest","Object","objectWithoutProperties","react_default","a","createElement","exports_Text","assign","fontSize","color","fontWeight","marginTop","borderBottomColor","borderBottomWidth","borderBottomStyle","Link","margins","View","marginVertical","esm","OutboundLink","textDecoration","components_text","children","Dropdown","alignItems","paddingHorizontal","fontStyle","title","Picker","R","item","Item","key","label","value","items","App","_useState","useState","_useState2","slicedToArray","versions","setVersions","_useState3","_useState4","fromVersion","setFromVersion","_useState5","_useState6","toVersion","setToVersion","fetchVersions","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","text","wrap","_context","prev","next","fetch","sent","stop","apply","this","arguments","useEffect","ReactGA","initialize","pageview","className","flexDirection","src","logo","alt","react_github_btn","href","data-icon","data-size","data-show-count","aria-label","dropdown","selectedValue","onValueChange","semver","gt","components_link","to","concat","eventLabel","position","bottom","right","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.be61e929.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\nimport { Text as RText } from 'react-native-web'\n\n\nconst Text = (props) => {\n  const { h1, h2, bold, link, style, ...rest } = props\n\n  return (\n    <RText\n    style={[\n      {\n        fontSize: 'calc(10px + 2vmin)',\n        color: 'white',\n      },\n      bold && { fontWeight: 'bold' },\n      h1 && { fontSize: 'calc(30px + 2vmin)', fontWeight: 'bold' },\n      h2 && { fontSize: 'calc(20px + 2vmin)', fontWeight: 'bold', marginTop: '20px' },\n      link && {\n        borderBottomColor: 'white',\n        borderBottomWidth: '1px',\n        borderBottomStyle: 'solid',\n      },\n      style,\n    ]}\n    {...rest}\n    />\n  )\n}\n\nexport default Text\n","import React from 'react'\nimport { View } from 'react-native-web'\nimport ReactGA from 'react-ga'\n\nimport { Text } from '.'\n\n\nconst Link = (props) => {\n  const { margins, ...rest } = props\n  return (\n    <View\n      style={[\n        margins && { marginVertical: '4px' },\n      ]}\n    >\n    <ReactGA.OutboundLink\n      style={{ textDecoration: 'none' }}\n      {...props}\n    >\n        <Text link>{props.children}</Text>\n      </ReactGA.OutboundLink>\n    </View>\n  )\n}\n\nexport default Link\n","import React from 'react'\nimport { Picker, View } from 'react-native-web'\nimport * as R from 'ramda'\n\nimport { Text } from '.'\n\n\nconst Dropdown = (props) => {\n  return (\n    <View style={{ alignItems: 'flex-start', paddingHorizontal: '8px' }}>\n      <Text style={{ fontStyle: 'italic' }}>{props.title}</Text>\n      <Picker {...props}>\n        {R.map(item => (\n          <Picker.Item key={item} label={item} value={item} />\n        ))(props.items)}\n      </Picker>\n    </View>\n  )\n}\n\nexport default Dropdown\n","import React, { useEffect, useState } from 'react';\nimport { View } from 'react-native-web'\nimport * as R from 'ramda'\nimport GitHubButton from 'react-github-btn'\nimport semver from 'semver'\nimport ReactGA from 'react-ga'\n\nimport logo from './logo.svg';\nimport './App.css';\n\nimport { Text, Dropdown, Link } from './components'\n\n\nconst App = (props) => {\n\n  const [versions, setVersions] = useState([])\n  const [fromVersion, setFromVersion] = useState('')\n  const [toVersion, setToVersion] = useState('')\n\n  const fetchVersions = async () => {\n    const response = await fetch(\n      'https://raw.githubusercontent.com/pvinis/rn-diff-purge/master/VERSIONS'\n    )\n    const text = await response.text()\n    const versions = R.split('\\n')(text)\n    setVersions(versions)\n    setFromVersion(versions[1])\n    setToVersion(versions[0])\n  }\n\n  useEffect(() => { fetchVersions() }, [])\n\n  useEffect(() => {\n    ReactGA.initialize('UA-136307971-1')\n    ReactGA.pageview('/')\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Text h1>Upgrade your React Native app ðŸŽ‰</Text>\n        <View style={{ flexDirection: 'row' }}>\n          <Text>powered by </Text><Text bold>rn-diff-purge</Text>\n        </View>\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <GitHubButton href=\"https://github.com/pvinis/rn-diff-purge\" data-icon=\"octicon-star\" data-size=\"large\" data-show-count=\"true\" aria-label=\"Star pvinis/rn-diff-purge on GitHub\">Star</GitHubButton>\n        <Text h2>Get diff</Text>\n        <View style={{ flexDirection: 'row', marginVertical: '30px', }}>\n          <Dropdown\n            title='From:'\n            items={versions}\n            selectedValue={fromVersion}\n            onValueChange={setFromVersion}\n          />\n          <Dropdown\n            title='To:'\n            items={versions}\n            selectedValue={toVersion}\n            onValueChange={setToVersion}\n          />\n        </View>\n        <View style={{ flexDirection: 'column' }}>\n          {(toVersion !== '' && semver.gt(fromVersion, toVersion)) && (\n            <Text style={{ color: 'orange' }}>You are downgrading. Are you sure?</Text>\n          )}\n          <Link margins\n            to={`https://github.com/pvinis/rn-diff-purge/compare/version/${fromVersion}..version/${toVersion}`}\n            eventLabel={`diff--${fromVersion}--${toVersion}`}\n          >\n            Diff here\n          </Link>\n          <Link margins\n            to={`https://raw.githubusercontent.com/pvinis/rn-diff-purge/master/diffs/${fromVersion}..${toVersion}.diff`}\n            eventLabel={`patch--${fromVersion}--${toVersion}`}\n          >\n            Patch here\n          </Link>\n        </View>\n        <View style={{ position: 'absolute', bottom: '8px', right: '8px', flexDirection: 'row' }}>\n          <Text>made with ðŸ’œ by </Text>\n          <Text bold>pvinis</Text>\n          <Text> (</Text>\n          <Link\n            to='https://github.com/pvinis'\n            eventLabel='github--pvinis'\n          >github</Link>\n          <Text>, </Text>\n          <Link\n            to='https://twitter.com/pvinis'\n            eventLabel='twitter--pvinis'\n          >twitter</Link>\n          <Text>)</Text>\n        </View>\n      </header>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}